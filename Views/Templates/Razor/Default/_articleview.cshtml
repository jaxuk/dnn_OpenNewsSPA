@using YeditUK.Modules.dnn_OpenNews.Templates.ViewModels;
@using YeditUK.Modules.dnn_OpenNews.Components.Helpers;
@using YeditUK.Modules.dnn_OpenNews;
@using System.Linq;
@using DotNetNuke.Web.Client.ClientResourceManagement;
@using System.Text;
@using System.Text.RegularExpressions;
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<ArticleViewModel>
@functions{
  public string getMetaDescription(YeditUK.Modules.dnn_OpenNews.Services.ViewModels.ArticleViewModel a)
  {
    var ret = a.MetaDescription;
    if (string.IsNullOrWhiteSpace(ret))
    {
      ret = a.Summary;
    }
    if (string.IsNullOrWhiteSpace(ret))
    {
      ret = CommonHelper.getSummaryFromBody(a.Body, 250);
    }
    return ret;
  }
  public string getSummary(YeditUK.Modules.dnn_OpenNews.Services.ViewModels.ArticleViewModel a)
  {
    var ret = a.Summary;
    if (string.IsNullOrWhiteSpace(ret))
    {
      ret = CommonHelper.getSummaryFromBody(a.Body, 250);
    }
    return ret;
  }
  public string getImageUrl(string rootUrl, long fileId) {
    var fileInfo = DotNetNuke.Services.FileSystem.FileManager.Instance.GetFile((int)fileId);
    return "";
  }
}
@{
  var mdpipeline = new Markdig.MarkdownPipelineBuilder();
  //mdpipeline.Extensions.Add(new Markdig.Extensions.MediaLinks.MediaLinkExtension(new Markdig.Extensions.MediaLinks.MediaOptions { Width = "100%", Height = "450" }));
  mdpipeline.Extensions.Add(new Markdig.Extensions.MediaLinks.MediaLinkExtension());
  mdpipeline.Extensions.Add(new Markdig.Extensions.Tables.PipeTableExtension());
  mdpipeline.Extensions.Add(new Markdig.Extensions.Bootstrap.BootstrapExtension());
  mdpipeline.Extensions.Add(new Markdig.Extensions.Figures.FigureExtension());
  var mdpipe = mdpipeline.Build();

  var a = Model.Article;
  TemplateHelper.InlineArticleImages(ref a, this);

  var pageObj = Context.CurrentHandler as System.Web.UI.Page;
  pageObj.Title = (!string.IsNullOrWhiteSpace(a.MetaTitle) ? a.MetaTitle : a.Title);
  pageObj.MetaDescription = getMetaDescription(a);
  //Set OGP Tags
  TaggingHelper.SetOgpTag("fb:app_id", "XXXXXXXXX", pageObj);
  TaggingHelper.SetOgpTag("og:type", "article", pageObj);
  TaggingHelper.SetOgpTag("og:url", a.vwURL, pageObj);
  TaggingHelper.SetOgpTag("og:title", a.Title, pageObj);
  var rootUrl = "https://" + Dnn.Portal.PortalAlias.HTTPAlias;
  if (a.Images.Count > 0)
  {
    TaggingHelper.SetOgpTag("og:image", rootUrl + a.Images[0].url + "&maxwidth=600&maxheight=300", pageObj);
  }

  //Set Twitter Cards
  TaggingHelper.SetTwitterTag("twitter:card", "summary_large_image", pageObj);
  TaggingHelper.SetTwitterTag("twitter:site", "", pageObj);
  TaggingHelper.SetTwitterTag("twitter:creator", "", pageObj);
  TaggingHelper.SetTwitterTag("twitter:title", a.Title, pageObj);
  TaggingHelper.SetTwitterTag("twitter:description", pageObj.MetaDescription, pageObj);
  if (a.Images.Count > 0)
  {
    TaggingHelper.SetTwitterTag("twitter:image", "https://" + Dnn.Portal.PortalAlias.HTTPAlias + a.Images[0].url + "&maxwidth=600&maxheight=300", pageObj);
  }
  //Set Canonical Link
  TaggingHelper.SetCanonicalLink(a.vwURL, pageObj);
  ClientResourceManager.RegisterScript(pageObj, this.VirtualPath + "/scripts/articleView.js");
  ClientResourceManager.RegisterStyleSheet(pageObj, this.VirtualPath + "/styles/styles.css");
}
<div class="articleView">
  @RenderPage("_menu.cshtml", new MenuViewModel
  {
    Dnn = Dnn,
    menuItems = Model.MenuView.menuItems
  })
  
  <article id="articleView">
    <header>
      <h1>@a.Title</h1>
      <span class="author">
        By <a href="@a.Author.profileUrl">@a.Author.name</a>
      </span>
      <span class="when">
        @a.StartDate.ToString("dd MMM yyyy")
      </span>
      @if (a.Categories.Count > 0)
      {
        <div class="categories">
          Posted in:
          @foreach (var c in a.Categories)
          {
            <a href="@UrlHelper.GetCategoryURL(Dnn.Tab.TabID, c.CategoryID)">@c.Name</a>
          }
        </div>
      }
      @if (a.Tags.Count > 0)
      {
        <div class="tags">
          @foreach (var t in a.Tags)
          {
            <a href="@UrlHelper.GetTagURL(Dnn.Tab.TabID, t.TagID)">@t.name</a>
          }
        </div>
      }
    </header>
    <div class="article-body">
      @Html.Raw(Markdig.Markdown.ToHtml(a.Body, mdpipe))
      @if (a.Images.Count > 0)
      {
        <div class="article-images">
          @foreach (var img in a.Images)
          {
            <figure>
              <a rel="articleGal" title="@img.Title" href="@img.url">
                <img src="@(img.url)&maxwidth=300&maxheight=300" alt="@img.Title">
              </a>
              <figcaption><p>@img.Title</p><p>@img.Description</p></figcaption>
            </figure>
          }
        </div>
      }
      @if (a.Files.Count > 0)
      {
        <div class="article-files">
          @foreach (var f in a.Files)
          {
            <a href="@f.url" class="btn">@(string.IsNullOrWhiteSpace(f.Title) ? f.Name : f.Title)</a>
          }
        </div>
      }
    </div>
    <aside></aside>
    <footer>
      <!--TODO Article Comments-->
    </footer>
  </article>
  <script language="javascript" type="text/javascript">
  jQuery(function ($) {
    var aricleView = new dnnOpenNewsSPA.aricleView(@a.ModuleID.ToString(), @a.ArticleID.ToString());
    console.log(aricleView);
    aricleView.init();
  });
  </script>
  <script type="application/ld+json">
    {
    "@@context": "http://schema.org",
    "@@type": "NewsArticle",
    "mainEntityOfPage": {
    "@@type": "WebPage",
    "url": "@a.vwURL"
    },
    "headline": "@a.Title",
    "description": "@getSummary(a)",
    "datePublished": "@(a.StartDate.ToUniversalTime().ToString())",
    "dateModified": "@(a.LastUpdated.ToUniversalTime().ToString())",
    "articleBody": "@(Markdig.Markdown.Normalize(a.Body).Replace('"', '\"'))",
    "publisher": {
    "@@type": "Organization",
    "name": "@Dnn.Portal.PortalName",
    "logo": {
    "@@type": "ImageObject",
    "url": "@("https://" + Dnn.Portal.PortalAlias.HTTPAlias + "/" + Dnn.Portal.LogoFile)"
    }
    },
    "author": {
    "@@type": "Person",
    "name": "@a.Author.name"
    }
    @if (a.Images.Count > 0)
    {

      <text>
        ,"image": {
        "@@type": "ImageObject",
        "url": "@("https://" + Dnn.Portal.PortalAlias.HTTPAlias + a.Images[0].url + "&maxwidth=600&maxheight=300")"
        }
      </text>
    }
    }
  </script>
</div>
