@using YeditUK.Modules.dnn_OpenNews.Templates.ViewModels;
@using YeditUK.Modules.dnn_OpenNews.Components.Helpers;
@using YeditUK.Modules.dnn_OpenNews;
@using System.Linq;
@using System.Data.Linq;
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<dynamic>
@functions{
  public string getMetaDescription(YeditUK.Modules.dnn_OpenNews.Services.ViewModels.ArticleViewModel a) {
    var ret = a.MetaDescription;
    if (string.IsNullOrWhiteSpace(ret)) {
      ret = a.Summary;
    }
    if (string.IsNullOrWhiteSpace(ret))
    {
      ret = CommonHelper.getSummaryFromBody(a.Body, 250);
    }
    return ret;
  }
  public string getSummary(YeditUK.Modules.dnn_OpenNews.Services.ViewModels.ArticleViewModel a)
  {
    var ret = a.Summary;
    if (string.IsNullOrWhiteSpace(ret))
    {
      ret = CommonHelper.getSummaryFromBody(a.Body, 250);
    }
    return ret;
  }
}
@{
  var mdpipeline = new Markdig.MarkdownPipelineBuilder();
  mdpipeline.Extensions.Add(new Markdig.Extensions.MediaLinks.MediaLinkExtension(new Markdig.Extensions.MediaLinks.MediaOptions { Width = "100%", Height = "450" }));
  mdpipeline.Extensions.Add(new Markdig.Extensions.Tables.PipeTableExtension());
  mdpipeline.Extensions.Add(new Markdig.Extensions.Bootstrap.BootstrapExtension());
  var mdpipe = mdpipeline.Build();

  var model = (ArticleViewModel)this.Model;
  var a = model.Article;
  
  var pageObj = Context.CurrentHandler as System.Web.UI.Page;
  //TODO: Bug - this is not setting the page props!
  pageObj.Title = (!string.IsNullOrWhiteSpace(a.MetaTitle) ? a.MetaTitle : a.Title);
  pageObj.MetaDescription = getMetaDescription(a);
  //Set OGP Tags
  TaggingHelper.SetOgpTag("fb:app_id", "XXXXXXXXX", pageObj);
  TaggingHelper.SetOgpTag("og:type", "article", pageObj);
  TaggingHelper.SetOgpTag("og:url", UrlHelper.GetArticleURL(Dnn.Tab.TabID,a.ArticleID), pageObj);
  TaggingHelper.SetOgpTag("og:title", a.Title, pageObj);
  if (a.Images.Count > 0) {
    TaggingHelper.SetOgpTag("og:image", "https://" + Dnn.Portal.PortalAlias.HTTPAlias + a.Images[0].url + "&maxwidth=600&maxheight=300", pageObj);
  }

  //Set Twitter Cards
  TaggingHelper.SetTwitterTag("twitter:card", "summary_large_image", pageObj);
  TaggingHelper.SetTwitterTag("twitter:site", "", pageObj);
  TaggingHelper.SetTwitterTag("twitter:creator", "", pageObj);
  TaggingHelper.SetTwitterTag("twitter:title", a.Title, pageObj);
  TaggingHelper.SetTwitterTag("twitter:description", pageObj.MetaDescription, pageObj);
  if (a.Images.Count > 0)
  {
    TaggingHelper.SetTwitterTag("twitter:image", "https://" + Dnn.Portal.PortalAlias.HTTPAlias + a.Images[0].url + "&maxwidth=600&maxheight=300", pageObj);
  }

}
<script type="application/ld+json">
  {
  "@@context": "http://schema.org",
  "@@type": "NewsArticle",
  "headline": "@a.Title",
  "description": "@getSummary(a)",
  "datePublished": "@(a.StartDate.ToUniversalTime().ToString())",
  "dateModified": "@(a.LastUpdated.ToUniversalTime().ToString())",
  "author": {
  "@@type": "Person",
  "name": "@a.Author.name"
  }
  @if (a.Images.Count > 0) {

    <text>
    ,"image": {
      "@@type": "ImageObject",
      "url": "@("https://" + Dnn.Portal.PortalAlias.HTTPAlias + a.Images[0].url + "&maxwidth=600&maxheight=300")"
      }
    </text>
  }
  }
</script>
@RenderPage("_menu.cshtml", new MenuViewModel
{
  Dnn = Dnn,
  menuItems = model.MenuView.menuItems
})
<article>
  <header>
    <h1>@a.Title</h1>
    <span class="author">
      By <a href="@a.Author.profileUrl">@a.Author.name</a>
    </span>
    <span class="when">
      @a.StartDate.ToString("dd MMM yyyy")
    </span>
    <div class="categories">
      @foreach (var c in a.Categories) {
        <a href="@UrlHelper.GetCategoryURL(Dnn.Tab.TabID, c.CategoryID)">@c.Name</a>
      }
    </div>
    <div class="tags">
      @foreach (var t in a.Tags)
      {
        <a href="@UrlHelper.GetTagURL(Dnn.Tab.TabID, t.TagID)">@t.name</a>
      }
    </div>
  </header>
  <div class="article-body">
    @Html.Raw(Markdig.Markdown.ToHtml(a.Body, mdpipe))
    @if (a.Images.Count > 0)
    {
      <div class="article-images">
        @foreach (var img in a.Images)
        {
          <figure>
            <a rel="articleGal" title="@img.Title" href="@img.url">
              <img src="@(img.url)&maxwidth=300&maxheight=300" alt="@img.Title">
            </a>
            <figcaption><p>@img.Title</p><p>@img.Description</p></figcaption>
          </figure>
        }
      </div>
    }
    @if (a.Files.Count > 0)
    {
      <div class="article-files">
        @foreach (var f in a.Files)
        {
          <a href="@f.url" class="btn">@(string.IsNullOrWhiteSpace(f.Title)?f.Name:f.Title)</a>
        }
      </div>
    }
  </div>
  <aside>

  </aside>
  <footer>
    <!--Article Comments-->
  </footer>
</article>

